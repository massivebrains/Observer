environment: prod
cloudProvider: "AWS"

envVars:
  APP_ENV: production
  APP_DEBUG: false
  LOG_CHANNEL: stdout
  LOG_LEVEL: info
  APP_URL: https://status-monitoring.internal.meetsoci.com
  DB_HOST: shared-0001-soci-prod.cluster-cl2shdkfnpqv.us-east-1.rds.amazonaws.com
  DB_PORT: 3306
  DB_DATABASE: status_monitoring
  RABBITMQ_HOST: b-3180e752-ce66-4a0e-95a5-0b4f5065abe4.mq.us-east-1.amazonaws.com
  RABBITMQ_PORT: 5671
  RABBITMQ_SIMULTANEOUS_MESSAGES: 5
  RABBITMQ_PROTOCOL: amqps

secrets:
  APP_KEY: status-monitoring-app-key
  DB_USERNAME: status-monitoring-db-user
  DB_PASSWORD: status-monitoring-db-password
  API_AUTH_TOKEN: status-monitoring-service-api-auth-token
  RABBITMQ_USERNAME: soci-production/rabbit-mq/username
  RABBITMQ_PASSWORD: soci-production/rabbit-mq/password
  SLACK_BOT_USER_OAUTH_TOKEN: status-monitoring-slack-oauth-token

image:
  tag: REPLACE_IMAGE_TAG

cronjobs:
  - name: scheduler
    schedule: "* * * * *"
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: "1"
        memory: 512Mi
    command:
      - /usr/local/bin/php
    args:
      - /application/artisan
      - schedule:run

php_fpm_enabled: true
php_fpm_exporter_enabled: true
ingress:
  enabled: true
  internal: true
  routes:
    - hostname: status-monitoring.internal.meetsoci.com
      path: /

service:
  port: 8080

resources:
  limits:
    cpu: 2
    memory: 1024Mi
  requests:
    memory: 512Mi

nodeSelector:
  lifecycle: od01

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
